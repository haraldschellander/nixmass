[{"path":"https://haraldschellander.github.io/nixmass/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Harald Schellander. Author, maintainer. Michael Winkler. Contributor.","code":""},{"path":"https://haraldschellander.github.io/nixmass/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schellander H (2024). nixmass: Snow Water Equivalent Modeling 'Delta.snow' Model Empirical Regression Models. R package version 1.2.5, https://haraldschellander.github.io/nixmass/.","code":"@Manual{,   title = {nixmass: Snow Water Equivalent Modeling with the 'Delta.snow' Model and Empirical Regression Models},   author = {Harald Schellander},   year = {2024},   note = {R package version 1.2.5},   url = {https://haraldschellander.github.io/nixmass/}, }"},{"path":"https://haraldschellander.github.io/nixmass/index.html","id":"nixmass","dir":"","previous_headings":"","what":"Snow Water Equivalent Modeling with the Delta.snow Model and Empirical Regression Models","title":"Snow Water Equivalent Modeling with the Delta.snow Model and Empirical Regression Models","text":"R-package functions Snow Water Equivalent Modeling ΔSNOW\\Delta\\text{SNOW} Model Empirical Regression Models. Snow water equivalent modeled process based ΔSNOW\\Delta\\text{SNOW} model empirical regression models using relationships density diverse -site parameters. methods described Winkler et al. (2021), Guyennon et al. (2019), Pistocchi (2016), Jonas et al. (2009) Sturm et al. (2010).","code":""},{"path":"https://haraldschellander.github.io/nixmass/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Snow Water Equivalent Modeling with the Delta.snow Model and Empirical Regression Models","text":"easiest way get nixmass install CRAN","code":"install.packages(\"nixmass\")"},{"path":"https://haraldschellander.github.io/nixmass/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"Snow Water Equivalent Modeling with the Delta.snow Model and Empirical Regression Models","text":"install development version GitHub","code":"# install.packages(\"pak\") pak::pak(\"haraldschellander/nixmass\")"},{"path":"https://haraldschellander.github.io/nixmass/reference/hsdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily snow depth data for a northern alpine station — hsdata","title":"Daily snow depth data for a northern alpine station — hsdata","text":"Gapless daily snow depth observations winter season 1.8. - 31.7. station situated northern earstern alps altitude 600 m. anonymization years intentionally set 1900 - 1901. data series free gaps minimum 0 maximum 1.3 meters. intended used input data package nixmass calculate snow water equivalent bulk snow density delta.snow method several empirical regression models literature.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/hsdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily snow depth data for a northern alpine station — hsdata","text":"","code":"data(hsdata)"},{"path":"https://haraldschellander.github.io/nixmass/reference/hsdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily snow depth data for a northern alpine station — hsdata","text":"`data.frame` named data columns date hs. date date column contains character strings format \"YYYY-MM-DD\" class character hs hs column holds daily observed snow depths meters class numeric.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/hsdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily snow depth data for a northern alpine station — hsdata","text":"","code":"## Load example data  data(\"hsdata\")  ## explore dataset head(hsdata) #>         date hs #> 1 1900-08-01  0 #> 2 1900-08-02  0 #> 3 1900-08-03  0 #> 4 1900-08-04  0 #> 5 1900-08-05  0 #> 6 1900-08-06  0 plot(hsdata$hs, type=\"o\")   ## compute snow water equivalents o <- nixmass(hsdata, model=\"delta.snow\") plot(o) #> Warning: OS reports request to set locale to \"English\" cannot be honored   o1 <- nixmass(hsdata, alt=600, region.jo09 = 6, region.gu19 = \"central\", snowclass.st10 = \"alpine\", verbose = FALSE) plot(o1) #> Warning: OS reports request to set locale to \"English\" cannot be honored summary(o1) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #>   0.00000   0.00000   0.00000  38.58482  28.34948 282.25331"},{"path":"https://haraldschellander.github.io/nixmass/reference/nixmass.html","id":null,"dir":"Reference","previous_headings":"","what":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","title":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","text":"Snow Water Equivalent (SWE) modeled either exclusively daily snow depth changes statistically, depending snow depth, elevation, date climate class.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/nixmass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","text":"","code":"nixmass(   data,   model = c(\"delta.snow\", \"delta.snow.dyn_rho_max\", \"jo09\", \"pi16\", \"st10\", \"gu19\"),   alt,   region.jo09,   region.gu19,   snowclass.st10,   layers = FALSE,   verbose = FALSE )"},{"path":"https://haraldschellander.github.io/nixmass/reference/nixmass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","text":"data data.frame least two columns named date hs. contain date corresponding daily observations snow depth \\(hs \\ge 0\\) measured one site. unit must meters (m). gaps NA allowed. Dates must either class `character`, `Date` `POSIXct` given format YYYY-MM-DD. sub-daily resolution allowed moment (see details). model Defines model SWE computation. Can one, several `delta.snow`, `delta.snow.dyn_rho_max`, `jo09`, `pi16`, `st10`, `gu19`. model given, `delta.snow` taken. alt Must given meter one model `jo09`. Ignored otherwise. region.jo09 Must given one model `jo09`, ignored otherwise. must integer number 1 7 Swiss region station belongs , according Fig. 1 original reference. region.gu19 model contains `gu19` must one `italy`, `southwest`, `central` `southeast` described original reference. #' Ignored model `gu19`. snowclass.st10 Must given one model `st10`. Must one following character strings: `alpine`, `maritime`, `prairie`, `tundra`, `taiga` outlined original reference. Ignored model `st10`. layers Logical. parameters snow depth, swe age returned layerwise?. verbose Logical. additional information given runtime?","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/nixmass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","text":"list class nixmass components: swe Contains list numerical vectors. entry refers SWE values computed selected model(s). date Vector date strings input class format YYYY-MM-DD. hs Vector given snow depth values used compute SWE.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/nixmass.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","text":"nixmass function wrapper computation SWE different models. process based model delta.snow can chosen original formulation (Winkler et al. 20219) dynamically increasing maximum bulk snow density (Schroeder et al., 2024), well different empirical regression models Jonas,Pistocchi, Sturm Guyennon. `delta.snow` models ones `Pistocchi` `Guyennon`, needed parameters coefficients original references set default. can however changed according results datasets. models `Jonas` `Sturm` regression coefficients fixed. Computation quite fast exist restriction regarding length data. However, many years modeled , recommended split computation single years, separated zero snow depth values.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/nixmass.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","text":"Guyennon, N., Valt, M., Salerno, F., Petrangeli, ., Romano, E. (2019) 'Estimating snow water equivalent snow depth measurements Italian Alps', Cold Regions Science Technology. Elsevier, 167 (August), p. 102859. doi: 10.1016/j.coldregions.2019.102859.  Jonas, T., Marty, C. Magnusson, J. (2009) \"Estimating snow water equivalent snow depth measurements Swiss Alps\"\", Journal Hydrology, 378(1 - 2), pp. 161 - 167. doi: 10.1016/j.jhydrol.2009.09.021.  \t Pistocchi, . (2016) \"Simple estimation snow density Alpine region\", Journal Hydrology: Regional Studies. Elsevier B.V., 6(Supplement C), pp. 82 - 89. doi: 10.1016/j.ejrh.2016.03.004.  \t Sturm, M. et al. (2010) \"Estimating Snow Water Equivalent Using Snow Depth Data Climate Classes\", Journal Hydrometeorology, 11(6), pp. 1380 - 1394. doi: 10.1175/2010JHM1202.1.  Winkler, M., Schellander, H., Gruber, S.: Snow water equivalents exclusively snow depths temporal changes: delta.snow model, Hydrol. Earth Syst. Sci., 25, 1165-1187, doi: 10.5194/hess-25-1165-2021, 2021.  Schroeder, M.et al. (2024) \"CONTINUOUS SNOW WATER EQUIVALENT MONITORING GLACIERS USING COSMIC RAY NEUTRON SENSOR TECHNOLOGY CASE STUDY HINTEREISFERNER, AUSTRIA\", Proceedings: International Snow Science Workshop 2024, Tromsø, Norway, 1107 - 1114","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/nixmass.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","text":"Harald Schellander, Michael Winkler","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/nixmass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SWE modeling with the delta.snow process based model and several empirical regression models. — nixmass","text":"","code":"# Load example data with realistic snow depth values  # from a station at 600 meters in the northern Alps # Note that the winter season is set to an arbitrary date  # to mask its origin data(\"hsdata\") o <- nixmass(hsdata, model=\"delta.snow\",verbose=TRUE) #> Using parameters: #>      rho.max     rho.null         c.ov         k.ov            k          tau  #> 4.012588e+02 8.119417e+01 5.104722e-04 3.785674e-01 2.993175e-02 2.362476e-02  #>     eta.null     timestep  #> 8.523356e+06 2.400000e+01  #> Error in msg(m, t, paste0(\"day \", t, \" (\", data$date[t], \"): \")): argument \"strg\" is missing, with no default plot(o) #> Error: object 'o' not found  o1 <- nixmass(hsdata, alt=600, region.jo09=6, region.gu19 = \"central\",               snowclass.st10 = \"alpine\", verbose = FALSE) plot(o1) #> Warning: OS reports request to set locale to \"English\" cannot be honored  summary(o1) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #>   0.00000   0.00000   0.00000  38.58482  28.34948 282.25331   swe <- nixmass(hsdata, alt = 1000, region.jo09=1, snowclass.st10 = \"tundra\", region.gu19 = \"italy\") summary(swe) #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #>   0.00000   0.00000   0.00000  38.58482  28.34948 282.25331"},{"path":"https://haraldschellander.github.io/nixmass/reference/plot.nixmass.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot modeled SWE values of a nixmass object. — plot.nixmass","title":"Plot modeled SWE values of a nixmass object. — plot.nixmass","text":"Plot modeled SWE values nixmass object.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/plot.nixmass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot modeled SWE values of a nixmass object. — plot.nixmass","text":"","code":"# S3 method for class 'nixmass' plot(x, title = NULL, density = FALSE, ...)"},{"path":"https://haraldschellander.github.io/nixmass/reference/plot.nixmass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot modeled SWE values of a nixmass object. — plot.nixmass","text":"x nixmass object. title Main plot title. density Shall density plot created? ... graphical parameters may also supplied arguments. See plot.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/plot.nixmass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot modeled SWE values of a nixmass object. — plot.nixmass","text":"return anything. plot produced.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/plot.nixmass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot modeled SWE values of a nixmass object. — plot.nixmass","text":"","code":"data(\"hsdata\") plot(nixmass(hsdata, model = \"delta.snow\")) #> Warning: OS reports request to set locale to \"English\" cannot be honored  plot(nixmass(hsdata, model = \"delta.snow.dyn_rho_max\", layers = TRUE), density = TRUE) #> Warning: OS reports request to set locale to \"English\" cannot be honored #> No id variables; using all as measure variables #> No id variables; using all as measure variables"},{"path":"https://haraldschellander.github.io/nixmass/reference/summary.nixmass.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary of a nixmass object. — summary.nixmass","title":"Print summary of a nixmass object. — summary.nixmass","text":"Print summary nixmass object.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/summary.nixmass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary of a nixmass object. — summary.nixmass","text":"","code":"# S3 method for class 'nixmass' summary(object, ...)"},{"path":"https://haraldschellander.github.io/nixmass/reference/summary.nixmass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary of a nixmass object. — summary.nixmass","text":"object nixmass object. ... Additional arguments affecting summary produced.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/summary.nixmass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print summary of a nixmass object. — summary.nixmass","text":"Summary information SWE values calculated selected models printed screen.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/summary.nixmass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print summary of a nixmass object. — summary.nixmass","text":"","code":"data(\"hsdata\") n <- nixmass(hsdata, model = c(\"delta.snow\", \"pi16\")) summary(n) #>            Min. 1st Qu. Median     Mean  3rd Qu.     Max. #> delta.snow    0       0      0 38.58482 28.34948 282.2533 #> pi16          0       0      0 44.71321 32.64000 410.8000"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.delta.snow.html","id":null,"dir":"Reference","previous_headings":"","what":"SWE modeling from daily snow depth differences — swe.delta.snow","title":"SWE modeling from daily snow depth differences — swe.delta.snow","text":"Model daily values Snow Water Equivalent solely daily differences snow depth. swe.delta.snow computes SWE solely daily changes snow depth observation site.  Compression snow layer without additional load top computed basis Sturm Holmgren (1998), regard snow viscous fluid:  $$\\rho_i(t_{+1}) = \\rho_i(t_i)*(1+(SWE*g)/\\eta_0 * exp^{-k_2*\\rho_i(t_i)})$$ \\(\\rho_i(t_{+1}) \\rho_i(t_i)\\) tomorrow's today's respective density layer , gravitational acceleration \\(g = 9.8ms^{-2}\\), viscosity \\(\\eta_0\\) (Pa) factor \\(k2 [m^3kg^{-1}\\)], determining importance today's tomorrow's density.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.delta.snow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SWE modeling from daily snow depth differences — swe.delta.snow","text":"","code":"swe.delta.snow(   data,   model_opts = list(),   dyn_rho_max = TRUE,   layers = FALSE,   verbose = FALSE )"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.delta.snow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SWE modeling from daily snow depth differences — swe.delta.snow","text":"data data.frame least two columns named date hs. contain date corresponding daily observations snow depth \\(hs \\ge 0\\) measured one site. unit must meters (m). gaps NA allowed. Dates must either class character, Date POSIXct given format YYYY-MM-DD. sub-daily resolution allowed moment (see details). Note hs start zero. model_opts empty list can populated model coefficients specific original delta.snow model (Winkler et al., 2021) version, maximum layer bulk snow densities allowed vary age (see details). dyn_rho_max Logical. TRUE, maximum bulk snow density allowed vary layer age (see details). FALSE, original delta.snow model used. layers parameters snow depth, swe age returned layerwise? Can TRUE FALSE. verbose additional information given runtime? Can TRUE FALSE.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.delta.snow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SWE modeling from daily snow depth differences — swe.delta.snow","text":"layears = FAlSE, vector daily SWE values mm. layers=TRUE, list layerwise matrices parameters h (snow depth), swe age returned additionally SWE vector. matrix holds dates x-axis layers y-axis. swe mm, h m age days. ","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.delta.snow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SWE modeling from daily snow depth differences — swe.delta.snow","text":"dyn_rho_max=TRUE, bulk snow density varies layer age. activation function, atan used, S-curve symmetrically transitions lower upper density bound. case, model_opts extended lower density bound rho_l, upper density bound rho_h, slope sigma midpoint mu, found via optimization procedure (Winkler et al., 2021). aware also model coefficients slightly change. following model coefficients must provided: dyn_rho_max=FALSE: rho.max Maximum density individual snow layer produced delta.snow model (kg/m3), \\(rho.max > 0\\) rho.null Fresh snow density newly created layer (kg/m3), \\(rho.null > 0\\). Currently optimized daily snow depth observations. c.ov Overburden factor due fresh snow (-), \\(c.ov > 0\\) k.ov Defines impact individual layer density compaction due overburden (-), \\(k.ov \\[0,1]\\). k Exponent exponential-law compaction (m3/kg), \\(k > 0\\). tau Uncertainty bound (m), \\(tau > 0\\). eta.null Effective compactive viscosity snow \"zero-density\" (Pa s). timestep Timestep snow depth observations hours. Default 24 hours, .e. daily snow depth observations. sub-daily values allowed moment (see details). dy_rho_max=TRUE: Instead constant coefficient rho.max, four parameters describe smooth S-curve approximated atan trigonometric function. sigma Steepness slope atan midpoint mu, (-), \\(sigma > 0\\). mu Central midpoint days, steepest transition occurs (days), \\(mu > 0\\). rho_h Upper density bound single layer whole snow pack (kg/m3), \\(rho_h > 0\\). rho_l Lower density bound single layer whole snow pack, transition begins (kg/m3), \\(rho_l > 0\\). coefficients needed well. aware however slightly different. easiest way call original delta.swe model swe.delta.snow(hsdata, dyn_rho_max = FALSE). Note parameters intrinsic dynamic density model provided original model silently ignored. principal, model able cope sub-daily temporal resolution, e.g. hourly snow depth observations. However, model fitted daily observations, model parameter rho.null reflects . words, observation frequency changes, rho.null change well. Currently, sub-daily resolution allowed.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.delta.snow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SWE modeling from daily snow depth differences — swe.delta.snow","text":"Gruber, S. (2014) \"Modelling snow water equivalent based daily snow depths\", Masterthesis, Institute Atmospheric Cryospheric Sciences, University Innsbruck.  Martinec, J., Rango, . (1991) \"Indirect evaluation snow reserves mountain basins\". Snow, Hydrology Forests High Alpine Areas. pp. 111-120.  Sturm, M., Holmgren, J. (1998) \"Differences compaction behavior three climate classes snow\". Annals Glaciology 26, 125-130.  Winkler, M., Schellander, H., Gruber, S.: Snow water equivalents exclusively snow depths temporal changes: delta.snow model, Hydrol. Earth Syst. Sci., 25, 1165-1187, doi: 10.5194/hess-25-1165-2021, 2021.  Schroeder, M.et al. (2024) \"CONTINUOUS SNOW WATER EQUIVALENT MONITORING GLACIERS USING COSMIC RAY NEUTRON SENSOR TECHNOLOGY CASE STUDY HINTEREISFERNER, AUSTRIA\", Proceedings: International Snow Science Workshop 2024, Tromsø, Norway, 1107 - 1114","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.delta.snow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SWE modeling from daily snow depth differences — swe.delta.snow","text":"Harald Schellander, Michael Winkler","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.delta.snow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SWE modeling from daily snow depth differences — swe.delta.snow","text":"","code":"data(hsdata, package = \"nixmass\")  swe_dyn <- swe.delta.snow(hsdata) swe <- swe.delta.snow(hsdata, dyn_rho_max = FALSE) plot(seq_along(hsdata$date), swe_dyn, type = \"l\", ylab = \"SWE (mm) / hs (cm)\", xlab = \"day\") lines(seq_along(hsdata$date), swe, type = \"l\", col = \"red\")  lines(seq_along(hsdata$date), hsdata$hs * 100, type = \"l\", lty = 2, col = \"grey30\")  legend(title = \"delta.snow\", \"topleft\", legend = c(\"SWE dyn\", \"SWE\", \"HS\"),   col = c(\"black\", \"red\", \"grey30\"), lty = c(1, 1, 2))"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.gu19.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical SWE modeling based on a quadratic dependance on the day-of-year — swe.gu19","title":"Statistical SWE modeling based on a quadratic dependance on the day-of-year — swe.gu19","text":"model parameterizes bulk snow density day---year input similar swe.pi16 adds quadratic dependance. calibrated regions whole Italian alps, subregions South-West, Central South-East. setting cofficients empirical regression can however used results datasets.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.gu19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical SWE modeling based on a quadratic dependance on the day-of-year — swe.gu19","text":"","code":"swe.gu19(data, region.gu19, n0 = NA, n1 = NA, n2 = NA)"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.gu19.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical SWE modeling based on a quadratic dependance on the day-of-year — swe.gu19","text":"data data.frame daily observations two columns named date hs referring day snow depth day. date column can class `character`, `Date` `POSIXct` format YYYY-MM-DD. hs column must snow depth values \\(\\ge 0\\) m. region.gu19 Must one italian subalpine regions italy, southwest, central southeast, defined original reference (see details), myregion, case coefficients n0, n1 n2 set. n0 Intercept empirical regression densities day--year (see details). n1 Slope empirical regression densities day--year (see details). n2 Quadratic dependence empirical regression densities day--year (see details).","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.gu19.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical SWE modeling based on a quadratic dependance on the day-of-year — swe.gu19","text":"vector daily SWE values mm.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.gu19.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical SWE modeling based on a quadratic dependance on the day-of-year — swe.gu19","text":"swe.gu19 Similar model Pistocchi (2016), function uses day--year (DOY) parameterization bulk snow density hence SWE. contrast latter, , quadratic term DOY added, reflect non-linearity snow bulk density variability. datums input data.frame converted DOY days spent since November 1st. Regression coefficients depend regions defined Guyennon et al. (2019), italy Italian Alps, southwest South-western Italian Alps, central Central Italian Alpes southeast South-western Italian Alps. region.gu19 set myregion, coefficients , n1 n2 must set values, obtained regression densities day--year another dataset. form density ~ DOY + DOY^2, DOY day--year defined original reference. Non computable values returned NA.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.gu19.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Statistical SWE modeling based on a quadratic dependance on the day-of-year — swe.gu19","text":"Guyennon, N., Valt, M., Salerno, F., Petrangeli, ., Romano, E. (2019) 'Estimating snow water equivalent snow depth measurements Italian Alps', Cold Regions Science Technology. Elsevier, 167 (August), p. 102859. doi: 10.1016/j.coldregions.2019.102859. Pistocchi, . (2016) 'Simple estimation snow density Alpine region', Journal Hydrology: Regional Studies. Elsevier B.V., 6 (Supplement C), pp. 82 - 89. doi: 10.1016/j.ejrh.2016.03.004.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.gu19.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical SWE modeling based on a quadratic dependance on the day-of-year — swe.gu19","text":"","code":"data(hsdata) swe <- swe.gu19(hsdata, region = \"italy\") summary(swe) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's  #>   0.000   0.000   5.488  58.126  53.262 391.731      92"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.jo09.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical SWE modeling depending on month and climatic region in Switzerland — swe.jo09","title":"Statistical SWE modeling depending on month and climatic region in Switzerland — swe.jo09","text":"Snow Water Equivalent (SWE) modeled statistically depending snow depth, altitude, date region Switzerland.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.jo09.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical SWE modeling depending on month and climatic region in Switzerland — swe.jo09","text":"","code":"swe.jo09(data, alt, region.jo09)"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.jo09.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical SWE modeling depending on month and climatic region in Switzerland — swe.jo09","text":"data data.frame daily observations two columns named date hs referring day snow depth day. date column must either class `character`, `Date` `POSIXct` format YYYY-MM-DD. hs column must snow depth values \\(\\ge 0\\) m. alt Station elevation meters. region.jo09 Integer number Swiss region station belongs , according Fig. 1 original reference. Must one 1,2,3,4,5,6,7.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.jo09.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical SWE modeling depending on month and climatic region in Switzerland — swe.jo09","text":"nuemric vector SWE values region mm.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.jo09.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical SWE modeling depending on month and climatic region in Switzerland — swe.jo09","text":"swe.jo09 model parametrizes bulk snow density using snow depth, season (.e. month), site altitude site location. location implemented density offset according region Switzerland, station belongs . Non computable values returned NA.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.jo09.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Statistical SWE modeling depending on month and climatic region in Switzerland — swe.jo09","text":"Jonas, T., Marty, C. Magnusson, J. (2009) 'Estimating snow water equivalent snow depth measurements Swiss Alps', Journal Hydrology, 378(1 - 2), pp. 161 - 167. doi: 10.1016/j.jhydrol.2009.09.021.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.jo09.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical SWE modeling depending on month and climatic region in Switzerland — swe.jo09","text":"","code":"data(hsdata) swe <- swe.jo09(hsdata, 1500, 1) summary(swe)  #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.00    0.00    0.00   40.29   26.55  381.16  plot(swe)"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.pi16.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical SWE modeling depending on the day-of-year — swe.pi16","title":"Statistical SWE modeling depending on the day-of-year — swe.pi16","text":"model parameterizes bulk snow density day---year input. calibrated region South Tyrol, Italy, therefore called ST model original reference.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.pi16.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical SWE modeling depending on the day-of-year — swe.pi16","text":"","code":"swe.pi16(data, rho_0 = 200, K = 1)"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.pi16.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical SWE modeling depending on the day-of-year — swe.pi16","text":"data data.frame least two columns named date hs. contain date corresponding daily observations snow depth \\(hs \\ge 0\\) measured one site. unit must meters (m). gaps NA allowed. Dates must either class `character`, `Date` `POSIXct` given format YYYY-MM-DD. sub-daily resolution allowed moment (see details). rho_0 Intercept linear regression observed snow depths SWE values. rho_0 set 200 default, value original reference. can however set value according regression modeling datasets. K Slope linear regression observed densities day--year defined original reference. K set 1 default, value original reference. can however set value according regression modeling datasets.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.pi16.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical SWE modeling depending on the day-of-year — swe.pi16","text":"vector daily SWE values mm.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.pi16.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical SWE modeling depending on the day-of-year — swe.pi16","text":"swe.pi16 function uses day--year (DOY) parameterization bulk snow density hence SWE. , datums input data.frame converted DOY defined original reference: negative values 1.10. 31.12. DOY=-92 1.10. leap years 31.12. DOY = 0, non-leap years 31.12. DOY = -1 day 0. Non computable values returned NA.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.pi16.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Statistical SWE modeling depending on the day-of-year — swe.pi16","text":"Pistocchi, . (2016) 'Simple estimation snow density Alpine region', Journal Hydrology: Regional Studies. Elsevier B.V., 6(Supplement C), pp. 82 - 89. doi: 10.1016/j.ejrh.2016.03.004.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.pi16.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical SWE modeling depending on the day-of-year — swe.pi16","text":"","code":"data(hsdata) swe <- swe.pi16(hsdata) summary(swe) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.00    0.00    0.00   44.71   32.64  410.80"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.st10.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical SWE modeling depending on day of year and a climatic region — swe.st10","title":"Statistical SWE modeling depending on day of year and a climatic region — swe.st10","text":"Sturm model parametrizes bulk snow density day year snowclass.st10. trained historical snow depth - density - SWE data United States, Canada, Switzerland.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.st10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical SWE modeling depending on day of year and a climatic region — swe.st10","text":"","code":"swe.st10(   data,   snowclass.st10 = c(\"alpine\", \"maritime\", \"prairie\", \"tundra\", \"taiga\") )"},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.st10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical SWE modeling depending on day of year and a climatic region — swe.st10","text":"data data.frame least two columns named date hs. contain date corresponding daily observations snow depth \\(hs \\ge 0\\) measured one site. unit must meters (m). gaps NA allowed. Dates must either class `character`, `Date` `POSIXct` given format YYYY-MM-DD. sub-daily resolution allowed moment (see details). snowclass.st10 Must one following character strings: \"alpine\",\"maritime\",\"prairie\",\"tundra\",\"taiga\".","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.st10.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical SWE modeling depending on day of year and a climatic region — swe.st10","text":"vector daily SWE values mm.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.st10.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Statistical SWE modeling depending on day of year and a climatic region — swe.st10","text":"model converts snow depth SWE using snow depth, day year station location (climate class snow can inferred. day year (DOY) day-number season 1.10. - 30.6. 1.10. refers DOY = -92. 1.2. DOY = 32, 15.11. DOY = -47. snowclass.st10 must one character strings \"alpine\",\"maritime\",\"prairie\",\"tundra\" \"taiga\". Alps probably \"alpine\" appropriate climate classification. Non computable values returned NA.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.st10.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Statistical SWE modeling depending on day of year and a climatic region — swe.st10","text":"Sturm, M. et al. (2010) 'Estimating Snow Water Equivalent Using Snow Depth Data Climate Classes', Journal Hydrometeorology, 11(6), pp. 1380 - 1394. doi: 10.1175/2010JHM1202.1.","code":""},{"path":"https://haraldschellander.github.io/nixmass/reference/swe.st10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical SWE modeling depending on day of year and a climatic region — swe.st10","text":"","code":"data(hsdata) swe <- swe.st10(hsdata) summary(swe) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.00    0.00    0.00   44.69   29.30  439.41"}]
